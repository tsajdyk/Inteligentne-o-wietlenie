//Separate tab
//Header file

#ifndef InteligentLight_h
#define InteligentLight_h

#include "Arduino.h"

class IntelligentLight
{
  public:
  IntelligentLight(int pinled1, int pirPin);
    void Fotorezystor();
    void PIRHC();

  private:
  int _pinled1;
  int _pirPin;
};

#endif

//Separate Tab
//IntelligentLight

#include <LiquidCrystal.h>
LiquidCrystal lcd(2,3,4,5,6,7);
#define PIR 11
int pinled1 = 8;
int pirPin = 11;
int odczytanaWartosc = 0;
boolean takeLowTime;  
boolean lockLow = true;
int calibrationTime = 15;   
long unsigned int pause = 5000;  
long unsigned int lowIn;    


void setup(){
 //Fotorezystor with LCD setup begin
 pinMode(pinled1,OUTPUT);
 lcd.begin(16, 2);           //LCD type declaration
 lcd.clear();
 Serial.begin(9600);        
 pinMode(PIR, INPUT);       
 Serial.println("---- TEST CZUJNIKA RUCHU ----"); 
//Fotorezystor with LCD setup end

//PIRHC setup begin
  Serial.print("calibrating sensor ");
    for(int i = 0; i < calibrationTime; i++){
      Serial.print(".");
      delay(100);
      }
      Serial.println(" done");
      Serial.println("SENSOR ACTIVE");
      delay(50);
//PIRHC setup end
 
}

void loop(){
Fotorezystor(pinled1);
PIRHC(pirPin);

}

//Separate Tab
//Fotorezystor with LCD (16,2)
void Fotorezystor(int pinled1){

  odczytanaWartosc = analogRead(A0); //reading from Adc

  if (odczytanaWartosc <100){
    digitalWrite(pinled1, HIGH);
    lcd.clear();
    lcd.setCursor(0, 0);            //Set up cursor
    lcd.print("JEST NOC");
    lcd.setCursor(0,1);
    lcd.print("AUT. SWIATLO:ON");
    }else{
    lcd.clear();  
    digitalWrite(8,LOW);
    lcd.setCursor(0, 0);            //Set up cursor
    lcd.print("JEST DZIEN");
    lcd.setCursor(0,1);
    lcd.print("AUT. SWIATLO:OFF");
    
}
delay(50);
{
  if(digitalRead(PIR) == HIGH){                                
     digitalWrite(8,HIGH);
}else{
     digitalWrite(8,LOW);
}
}
}

//Separate Tab
//PIR HC-SR501 motion detector

void PIRHC(int pirPin){

   if(digitalRead(pirPin) == HIGH){
       digitalWrite(pinled1, HIGH);
       delay(10000);
                                    //the led visualizes the sensors output pin state
       if(lockLow){  
                                    //makes sure we wait for a transition to LOW before any further output is made:
         lockLow = false;            
         Serial.println("---");
         Serial.print("motion detected at ");
         Serial.print(millis()/1000);
         Serial.println(" sec"); 
         delay(50);
         }         
         takeLowTime = true;
       }

     if(digitalRead(pirPin) == LOW){       
       digitalWrite(pinled1, LOW);  //the led visualizes the sensors output pin state

       if(takeLowTime){
        lowIn = millis();          //save the time of the transition from high to LOW
        takeLowTime = false;       //make sure this is only done at the start of a LOW phase
        }
                                   //if the sensor is low for more than the given pause, 
                                   //we assume that no more motion is going to happen
       if(!lockLow && millis() - lowIn > pause){  
                                   //makes sure this block of code is only executed again after 
                                   //a new motion sequence has been detected
           lockLow = true;                        
           Serial.print("motion ended at ");      //output
           Serial.print((millis() - pause)/1000);
           Serial.println(" sec");
           delay(50);
           }
       }
}




